# Copyright 2012 Thomas Zebühr and Daniel Malmqvist

parent.0 = koza.params

# Number of thread
evalthreads = 4
breedthreads = 4

# Random seeds
seed.0 = 0
seed.1 = 1
seed.2 = 2
seed.3 = 3
seed.4 = 4
seed.5 = 5
seed.6 = 6
seed.7 = 7
seed.8 = 8
seed.9 = 9
seed.10 = 10
seed.11 = 11

pop.subpop.0.size =	10
# Population size

# Number of trees per individual
pop.subpop.0.species.ind.numtrees = 2
pop.subpop.0.species.ind.tree.0 = ec.gp.GPTree
pop.subpop.0.species.ind.tree.0.tc = tc0
pop.subpop.0.species.ind.tree.1 = ec.gp.GPTree
pop.subpop.0.species.ind.tree.1.tc = tc0

# Number of generations
generations = 50

# Types
# Atomic types
gp.type.a.size = 4

gp.type.a.0.name = direction
gp.type.a.1.name = bool
gp.type.a.2.name = snake
gp.type.a.3.name = int

# Set types
gp.type.s.size = 0

# GPTreeConstraints
gp.tc.size = 1

gp.tc.0 = ec.gp.GPTreeConstraints
gp.tc.0.name = tc0
gp.tc.0.fset = f0
gp.tc.0.returns = direction


# GPNodeConstraints
gp.nc.size = 11

gp.nc.0 = ec.gp.GPNodeConstraints
gp.nc.0.name = singleDirection
gp.nc.0.returns = direction
gp.nc.0.size = 0

gp.nc.1 = ec.gp.GPNodeConstraints
gp.nc.1.name = boolToBool
gp.nc.1.size = 1
gp.nc.1.returns = bool
gp.nc.1.child.0 = bool

gp.nc.2 = ec.gp.GPNodeConstraints
gp.nc.2.name = binaryBoolToBoolOperator
gp.nc.2.returns = bool
gp.nc.2.size = 2
gp.nc.2.child.0 = bool
gp.nc.2.child.1 = bool

gp.nc.3 = ec.gp.GPNodeConstraints
gp.nc.3.name = singleBool
gp.nc.3.returns = bool
gp.nc.3.size = 0

gp.nc.4 = ec.gp.GPNodeConstraints
gp.nc.4.name = conditionalDirection
gp.nc.4.returns = direction
gp.nc.4.size = 3
gp.nc.4.child.0 = bool
gp.nc.4.child.1 = direction
gp.nc.4.child.2 = direction

gp.nc.5 = ec.gp.GPNodeConstraints
gp.nc.5.name = singleSnake
gp.nc.5.size = 0
gp.nc.5.returns = snake

gp.nc.6 = ec.gp.GPNodeConstraints
gp.nc.6.name = snakeToDirection
gp.nc.6.size = 1
gp.nc.6.returns = direction
gp.nc.6.child.0 = snake

gp.nc.7 = ec.gp.GPNodeConstraints
gp.nc.7.name = singleInt
gp.nc.7.returns = int
gp.nc.7.size = 0

gp.nc.8 = ec.gp.GPNodeConstraints
gp.nc.8.name = directionToInt
gp.nc.8.size = 1
gp.nc.8.returns = int
gp.nc.8.child.0 = direction

gp.nc.9 = ec.gp.GPNodeConstraints
gp.nc.9.name = binaryBoolIntOperator
gp.nc.9.returns = bool
gp.nc.9.size = 2
gp.nc.9.child.0 = int
gp.nc.9.child.1 = int

gp.nc.10 = ec.gp.GPNodeConstraints
gp.nc.10.name = directionToDirection
gp.nc.10.size = 1
gp.nc.10.returns = direction
gp.nc.10.child.0 = direction

# Function sets
gp.fs.size = 1
gp.fs.0 = ec.gp.GPFunctionSet
gp.fs.0.name = f0
gp.fs.0.size = 10

# Functions 

#gp.fs.0.func.0 = gp.nodes.Not
#gp.fs.0.func.0.nc = boolToBool
#gp.fs.0.func.1 = gp.nodes.And
#gp.fs.0.func.1.nc = binaryBoolToBoolOperator
#gp.fs.0.func.2 = gp.nodes.Or
#gp.fs.0.func.2.nc = binaryBoolToBoolOperator

gp.fs.0.func.0 = gp.nodes.IfTrue
gp.fs.0.func.0.nc = conditionalDirection

gp.fs.0.func.1 = gp.nodes.ThisSnakeNode
gp.fs.0.func.1.nc = singleSnake

gp.fs.0.func.2 = gp.nodes.DirectionOf
gp.fs.0.func.2.nc = snakeToDirection

gp.fs.0.func.3 = gp.nodes.LeftOf
gp.fs.0.func.3.nc = directionToDirection
gp.fs.0.func.4 = gp.nodes.RightOf
gp.fs.0.func.4.nc = directionToDirection

gp.fs.0.func.5 = gp.nodes.DangerIn
gp.fs.0.func.5.nc = directionToInt

gp.fs.0.func.6 = gp.nodes.IntConstant
gp.fs.0.func.6.nc = singleInt

gp.fs.0.func.7 = gp.nodes.LessThan
gp.fs.0.func.7.nc = binaryBoolIntOperator
gp.fs.0.func.8 = gp.nodes.GreaterThan
gp.fs.0.func.8.nc = binaryBoolIntOperator
gp.fs.0.func.9 = gp.nodes.IntEqualTo
gp.fs.0.func.9.nc = binaryBoolIntOperator

# Problem
eval.problem = gp.SnaykuuProblem
eval.problem.data = gp.data.DirectionData
